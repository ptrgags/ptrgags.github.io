// Generated by CoffeeScript 1.10.0
(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  this.make_elem = function(tag, parent) {
    var elem;
    elem = document.createElement(tag);
    if (parent != null) {
      parent.appendChild(elem);
    }
    return elem;
  };

  this.Widget = (function() {
    function Widget() {}

    Widget.prototype.render = function() {
      var paragraph;
      paragraph = make_elem("p");
      paragraph.innerHTML = "Widget";
      return paragraph;
    };

    return Widget;

  })();

  this.IdeasCard = (function(superClass) {
    extend(IdeasCard, superClass);

    function IdeasCard(ideas) {
      this.ideas = ideas;
    }

    IdeasCard.prototype.render = function() {
      var i, idea, intro, item, len, p, panel, panel_body, ref, ul;
      panel = make_elem('div');
      panel.className = "panel panel-default";
      panel_body = make_elem('div', panel);
      panel_body.className = "panel-body";
      intro = make_elem('p', panel_body);
      intro.innerHTML = "This is a list of possible future projects I'd be interested in trying. I probably won't find time for most of them, but if enough people ask me about a single idea, I might consider making it a project.";
      p = make_elem("p", panel_body);
      p.innerHTML = "Feel free to take inspiration from this list! If you develop something cool, let me know at ptrgags@gmail.com. I'd love to hear about it!";
      ul = make_elem("ul", panel_body);
      ref = this.ideas;
      for (i = 0, len = ref.length; i < len; i++) {
        idea = ref[i];
        item = make_elem("li", ul);
        item.innerHTML = idea;
      }
      return panel;
    };

    return IdeasCard;

  })(Widget);

  this.ProjectCard = (function(superClass) {
    extend(ProjectCard, superClass);

    function ProjectCard(project) {
      this.project = project;
    }

    ProjectCard.prototype.render = function() {
      var buttons, collab, collab_p, description, dropbox_link, github_link, heading, info_col, link, panel, panel_body, pic_col, row, status_tag, tags, version_tag;
      panel = make_elem('div');
      panel.className = "panel panel-default";
      panel_body = make_elem('div', panel);
      panel_body.className = "panel-body";
      heading = make_elem('h2', panel_body);
      heading.innerHTML = this.project.title;
      row = make_elem('div', panel_body);
      row.className = "row";
      info_col = make_elem('div', row);
      info_col.className = "col-sm-6";
      pic_col = make_elem('div', row);
      pic_col.className = "col-sm-6";
      if (this.project["with"] != null) {
        collab_p = make_elem("p", info_col);
        collab_p.innerHTML = "With ";
        collab = make_elem("a", collab_p);
        collab.innerHTML = this.project["with"];
        collab.href = "https://github.com/" + this.project["with"];
      }
      tags = make_elem('p', info_col);
      if (this.project.version != null) {
        if (!this.project.version_prefix) {
          this.project.version_prefix = "Version";
        }
        version_tag = make_elem('span', tags);
        version_tag.className = "label label-success";
        version_tag.innerHTML = this.project.version_prefix + " " + this.project.version;
      }
      if (this.project.dev_number != null) {
        if (!this.project.dev_status) {
          this.project.dev_status = "backlog";
        }
        status_tag = make_elem('span', tags);
        if (this.project.dev_status === 'backlog') {
          status_tag.className = "label label-danger";
          status_tag.innerHTML = "v" + this.project.dev_number + " on Backlog";
        } else if (this.project.dev_status === 'development') {
          status_tag.className = "label label-warning";
          status_tag.innerHTML = "v" + this.project.dev_number + " in Development";
        }
      }
      if (this.project.description != null) {
        description = make_elem('p', info_col);
        description.innerHTML = this.project.description;
      }
      buttons = make_elem("div", panel_body);
      buttons.className = "btn-group";
      if (this.project.github_link != null) {
        github_link = make_elem("a", buttons);
        github_link.href = "https://github.com/ptrgags/" + this.project.github_link;
        github_link.className = "btn btn-success";
        github_link.role = "button";
        github_link.innerHTML = "View on Github";
      }
      if ((this.project.dropbox_link != null) && (this.project.version != null)) {
        dropbox_link = make_elem("a", buttons);
        dropbox_link.href = "https://dl.dropboxusercontent.com/u/25993970/github/" + this.project.dropbox_link;
        dropbox_link.className = "btn btn-success";
        dropbox_link.role = "button";
        dropbox_link.innerHTML = "View Version " + this.project.version;
      }
      if ((this.project.link != null) && this.project.link_text) {
        link = make_elem("a", buttons);
        link.href = "" + this.project.link;
        link.className = "btn btn-success";
        link.role = "button";
        link.innerHTML = this.project.link_text;
      }
      return panel;
    };

    return ProjectCard;

  })(Widget);

}).call(this);
