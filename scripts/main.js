// Generated by CoffeeScript 1.10.0
(function() {
  var NUM_COLS,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  this.make_elem = function(tag, parent) {
    var elem;
    elem = document.createElement(tag);
    if (parent != null) {
      parent.appendChild(elem);
    }
    return elem;
  };

  this.Widget = (function() {
    function Widget() {}

    Widget.prototype.render = function() {
      var paragraph;
      paragraph = document.createElement("p");
      paragraph.innerHTML = "Widget";
      return paragraph;
    };

    return Widget;

  })();

  this.ProjectCard = (function(superClass) {
    extend(ProjectCard, superClass);

    function ProjectCard(project) {
      this.project = project;
    }

    ProjectCard.prototype.render = function() {
      var buttons, collab, collab_p, description, dropbox_link, github_link, heading, info_col, link, panel, panel_body, pic_col, row, status_tag, tags, version_tag;
      panel = document.createElement('div');
      panel.className = "panel panel-default";
      panel_body = document.createElement('div');
      panel_body.className = "panel-body";
      panel.appendChild(panel_body);
      heading = document.createElement('h2');
      heading.innerHTML = this.project.title;
      panel_body.appendChild(heading);
      row = document.createElement('div');
      row.className = "row";
      panel_body.appendChild(row);
      info_col = document.createElement('div');
      info_col.className = "col-sm-6";
      row.appendChild(info_col);
      pic_col = document.createElement('div');
      pic_col.className = "col-sm-6";
      row.appendChild(pic_col);
      if (this.project["with"] != null) {
        collab_p = document.createElement("p");
        collab_p.innerHTML = "With ";
        info_col.appendChild(collab_p);
        collab = document.createElement("a");
        collab.innerHTML = this.project["with"];
        collab.href = "https://github.com/" + this.project["with"];
        collab_p.appendChild(collab);
      }
      tags = document.createElement('p');
      info_col.appendChild(tags);
      if (this.project.version != null) {
        if (!this.project.version_prefix) {
          this.project.version_prefix = "Version";
        }
        version_tag = document.createElement('span');
        version_tag.className = "label label-success";
        version_tag.innerHTML = this.project.version_prefix + " " + this.project.version;
        tags.appendChild(version_tag);
      }
      if (this.project.dev_number != null) {
        if (!this.project.dev_status) {
          this.project.dev_status = "backlog";
        }
        status_tag = document.createElement('span');
        if (this.project.dev_status === 'backlog') {
          status_tag.className = "label label-danger";
          status_tag.innerHTML = "v" + this.project.dev_number + " on Backlog";
        } else if (this.project.dev_status === 'development') {
          status_tag.className = "label label-warning";
          status_tag.innerHTML = "v" + this.project.dev_number + " in Development";
        }
        tags.appendChild(status_tag);
      }
      if (this.project.description != null) {
        description = document.createElement('p');
        description.innerHTML = this.project.description;
        info_col.appendChild(description);
      }
      buttons = document.createElement("div");
      buttons.className = "btn-group";
      panel_body.appendChild(buttons);
      if (this.project.github_link != null) {
        github_link = document.createElement("a");
        github_link.href = "https://github.com/ptrgags/" + this.project.github_link;
        github_link.className = "btn btn-default";
        github_link.role = "button";
        github_link.innerHTML = "View on Github";
        buttons.appendChild(github_link);
      }
      if ((this.project.dropbox_link != null) && (this.project.version != null)) {
        dropbox_link = document.createElement("a");
        dropbox_link.href = "https://dl.dropboxusercontent.com/u/25993970/github/" + this.project.dropbox_link;
        dropbox_link.className = "btn btn-default";
        dropbox_link.role = "button";
        dropbox_link.innerHTML = "View Version " + this.project.version;
        buttons.appendChild(dropbox_link);
      }
      if ((this.project.link != null) && this.project.link_text) {
        link = document.createElement("a");
        link.href = "" + this.project.link;
        link.className = "btn btn-default";
        link.role = "button";
        link.innerHTML = this.project.link_text;
        buttons.appendChild(link);
      }
      return panel;
    };

    return ProjectCard;

  })(Widget);

  NUM_COLS = 2;

  this.score = function(proj) {
    var val;
    val = 0;
    if (proj.priority != null) {
      val |= 0x04;
    }
    if (proj.version != null) {
      val |= 0x02;
    }
    if ((proj.dev_status != null) && proj.dev_status === 'development') {
      val |= 0x01;
    }
    return val;
  };

  this.sort_projects = function(a, b) {
    var a_score, b_score;
    a_score = score(a);
    b_score = score(b);
    if (a_score > b_score) {
      return -1;
    }
    if (a_score < b_score) {
      return 1;
    }
    if (a.title.toLowerCase() < b.title.toLowerCase()) {
      return -1;
    }
    if (a.title.toLowerCase() > b.title.toLowerCase()) {
      return 1;
    }
    return 0;
  };

  this.show_ideas = function() {
    var contents, title;
    contents = document.getElementById("content");
    contents.innerHTML = "";
    title = make_elem("h1", contents);
    return title.innerHTML = "Project Ideas";
  };

  this.show_projects = function() {
    var card, col, column, contents, i, key, len, proj, project_arr, results, row, title;
    contents = document.getElementById("content");
    contents.innerHTML = "";
    column = 0;
    row = null;
    title = document.createElement("h1");
    title.innerHTML = "GitHub Projects";
    contents.appendChild(title);
    project_arr = (function() {
      var results;
      results = [];
      for (key in projects) {
        results.push(projects[key]);
      }
      return results;
    })();
    project_arr.sort(sort_projects);
    results = [];
    for (i = 0, len = project_arr.length; i < len; i++) {
      proj = project_arr[i];
      if (column === 0) {
        row = document.createElement("div");
        row.className = "row";
        contents.appendChild(row);
      }
      col = document.createElement("div");
      col.className = "col-sm-" + (Math.floor(12 / NUM_COLS));
      row.appendChild(col);
      card = new ProjectCard(proj);
      col.appendChild(card.render());
      results.push(column = (column + 1) % NUM_COLS);
    }
    return results;
  };

  this.onload = function() {
    document.getElementById("btn-github").onclick = show_projects;
    document.getElementById("btn-ideas").onclick = show_ideas;
    return show_projects();
  };

}).call(this);
